from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command
from aiogram.dispatcher import filters
import phonenumbers

from filters import PHONE_REGEXP
from keyboards.default import kb_menu
from utils.db_api import quick_commands as commands
from utils.misc import rate_limit

from loader import dp

from states import register

@dp.message_handler(Command('verify')) # /register
async def register_(message: types.Message):
    try:
        user = await commands.select_user(message.from_user.id)
        if user.status == 'active':
            await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {user.first_name}\n'
                                 f'–¢—ã —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–∏–ª –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–æ–≤ –∫–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ mos.ru –≤ —Ç–µ–ª–µ–≥—Ä–∞–º')
        elif user.status == 'banned':
            await message.answer(f'–ü—Ä–∏–≤–µ—Ç {user.first_name}\n'
                                 f'–¢—ã —É–∂–µ –∑–∞–±–∞–Ω–µ–Ω')
    except Exception:
        from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

    # –ø–æ–¥—Å–∫–∞–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –µ–≥–æ –∏–º–µ–Ω–µ–º –∏–∑ first_name, –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º
        name = ReplyKeyboardMarkup(
            keyboard=[
                [
                    KeyboardButton(text=f'{message.from_user.first_name}')
                ],
            ],
            resize_keyboard=True
        )


        await message.answer('–ü—Ä–∏–≤–µ—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –∫–æ–¥—ã –ø–æ—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è mos.ru –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –≤–≤–µ–¥–∏ —Å–≤–æ–µ –∏–º—è.\n'
                             '–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ç–æ–º, –∑–∞—á–µ–º —ç—Ç–æ –Ω—É–∂–Ω–æ - /info', reply_markup=name)
        await register.test2.set()



@dp.message_handler(state=register.test2)
async def state2(message: types.Message, state:FSMContext):
    answer = message.text

    from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

    # –ø–æ–¥—Å–∫–∞–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é - –∫–Ω–æ–ø–∫–∞ "–ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º "
    mobnumber = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º", request_contact=True)
            ],
        ],
        resize_keyboard=True
    )

    await state.update_data(text2=answer)
    data = await state.get_data()
    name = data.get('text2')
    await message.answer(f'{name}, –Ω–∞–ø–∏—à–∏ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞?', reply_markup=mobnumber)
    await register.test3.set()

# –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω –∫–æ—Ç–æ—Ä—ã–π –≤–≤–µ–ª–∏ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º
@dp.message_handler(state=register.test3, content_types=types.ContentType.CONTACT)
# –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω –∫–æ—Ç–æ—Ä—ã–π –≤–≤–µ–ª–∏ —Ä—É—á–∫–∞–º–∏
@dp.message_handler(filters.Regexp(PHONE_REGEXP), state=register.test3)
async def state4(message: types.Message, state:FSMContext):
    if message.text is None:
        answer = message.contact.phone_number
    else:
        answer = message.text

    # —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª —Ç–µ–ª–µ—Ñ–æ–Ω –≤ —Ñ–æ—Ä–º–∞—Ç +79999999999
    my_number = phonenumbers.parse(answer, "RU")
    answer = phonenumbers.format_number(my_number, phonenumbers.PhoneNumberFormat.E164)

    await state.update_data(text3=answer)
    data = await state.get_data()
    name = data.get('text2')
    mobile =  data.get('text3')


    await commands.add_user(user_id=message.from_user.id,
                                first_name=name,
                                last_name=message.from_user.last_name,
                                username=message.from_user.username,
                                mobile=mobile,
                                status='active')
    await message.answer('–£—Å–ø–µ—Ö! –¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –∫–æ–¥—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è mos.ru –≤ —Ç–µ–ª–µ–≥—Ä–∞–º.')
    await state.finish()



# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ –≤–≤–µ–¥–µ–Ω –ù–ï —Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–¥—É–º–∞–ª —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
@dp.message_handler(state=register.test3)
async def state3(message: types.Message, state:FSMContext):
    from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
    # –ø–æ–¥—Å–∫–∞–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é - –∫–Ω–æ–ø–∫–∞ "–ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º "
    mobnumber = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º", request_contact=True)
            ],
        ],
        resize_keyboard=True
    )
    answer = message.text

    if answer not in ('–û—Ç–º–µ–Ω–∞', '–æ—Ç–º–µ–Ω–∞'):
        await state.update_data(text3=answer)
        data = await state.get_data()
        name = data.get('text1')
        print(name)
        years = data.get('text2')
        mobile =  data.get('text3')
        print(data)
        await message.answer('–≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω üò¨, –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑?\n'
                             '–ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–≤–æ–∞—Ç—å—Å—è - –≤–≤–µ–¥–∏ –û—Ç–º–µ–Ω–∞', reply_markup=mobnumber)
        await register.test3.set()
    else:
        await message.answer('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è  –æ—Ç–º–µ–Ω–µ–Ω–∞\n', reply_markup=kb_menu)
        await state.finish()



@rate_limit(limit=3)
@dp.message_handler(text='/profile')
async def get_profile(message: types.Message):
    try:
        user = await commands.select_user(message.from_user.id)
        if user is None:
            await message.answer(f'–¢—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω\n'
                                 f'–ü—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é - /register')
    except Exception:
        user = await commands.select_user(message.from_user.id)
        await message.answer(f'ID - {user.user_id}\n'
                             f'first_name - {user.first_name}\n'
                             f'last_name - {user.last_name}\n'
                             f'username - {user.username}\n'
                             f'status - {user.status}\n'
                             f'—Ç–µ–ª–µ—Ñ–æ–Ω = {user.mobile}'
                             )

